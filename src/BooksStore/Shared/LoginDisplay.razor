@using Blazored.LocalStorage;
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
	<Authorized>
		@* Render the content if the user is logged in *@
		<div class="d-flex align-items-center">
			<p class="my-0">Hello @context.User.FindFirst(ClaimTypes.GivenName)?.Value</p>

			<button class="btn btn-danger mx-2" @onclick="LogoutAsync">Logout</button>
		</div>
	</Authorized>
	<NotAuthorized>
		@* Render the content if the user is not logged in *@
		<a class="btn btn-outline-primary" href="/authentication/login">Login</a>
	</NotAuthorized>
</AuthorizeView>

@code 
{
	private async Task LogoutAsync()
	{
		await LocalStorage.RemoveItemAsync("access_token");
		await AuthenticationStateProvider.GetAuthenticationStateAsync();
	}
}
